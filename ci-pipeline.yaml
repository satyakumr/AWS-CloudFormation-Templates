AWSTemplateFormatVersion: 2010-09-09
Description: Continuous Integration for project

Parameters:
  VpcStack:
    Description: VPC stack name
    Type: String
  ProjectName:
    Type: String
    Description: The name of the project being built.  This name will be used on a number of resources.
  ProjectParameterOverrides:
    Type: String
    Description: JSON string for the parameters of the project template.
    Default: "{}"
  GitHubOAuthToken:
    Type: String
    Description: GitHub oauth token.  This user must have admin access to the repo.
    NoEcho: true
  GitHubRepoOwner:
    Type: String
    Description: GitHub repo owner.
  GitHubRepo:
    Type: String
    Description: GitHub git repo.
  GitHubBranch:
    Type: String
    Description: Git branch to build off of.
  GitHubBranchDest:
    Type: String
    Description: Git branch to pull request into after a successful deploy.  Leave empty for no action.
    Default: ""
  AWSAccountID:
    Type: String
  ECRRepoName:
    Type: String
  EKSClusterName:
    Type: String


Conditions:
  PullRequestAfterDeploy: !Not [!Equals [!Ref GitHubBranchDest, ""]]

Resources:

    # S3 bucket where build artifacts go
  DeploymentArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        # The guide recommends Enabled but I can't see why
        Status: Suspended

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com

  CodeBuildServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeBuildServicePolicy
      Roles:
        - !Ref CodeBuildServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*/*"
              - !Sub "arn:aws:s3:::${DeploymentArtifactBucket}/*"
              - "*"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:GetRepositoryPolicy
              - ecr:DescribeRepositories
              - ecr:ListImages
              - ecr:DescribeImages
              - ecr:BatchGetImage
              - ecr:GetLifecyclePolicy
              - ecr:GetLifecyclePolicyPreview
              - ecr:ListTagsForResource
              - ecr:DescribeImageScanFindings
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:PutImage
            Resource: "*"
          - Effect: Allow
            Action:
              - ssm:GetParameters
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:*
            Resource: "*"
          - Effect: Allow
            Action:
              - ec2:CreateNetworkInterface
              - ec2:DescribeDhcpOptions
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
              - ec2:DescribeVpcs
              - ec2:CreateNetworkInterfacePermission
            Resource: 
              - "*"
       
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        # ComputeType options: BUILD_GENERAL1_SMALL, BUILD_GENERAL1_MEDIUM, BUILD_GENERAL1_LARGE
        ComputeType: BUILD_GENERAL1_SMALL
        # Run `aws codebuild list-curated-environment-images` for a complete list of images provided.
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: BUILD_ARTIFACT_BUCKET
            Value: !Ref DeploymentArtifactBucket
          - Name: AWS_DEFAULT_REGION
            Value: ap-south-1
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWSAccountID
          - Name: IMAGE_REPO_NAME
            Value: !Ref ECRRepoName
          - Name: AWS_CLUSTER_NAME
            Value: !Ref EKSClusterName
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      TimeoutInMinutes: 10
      VpcConfig:
          VpcId: !ImportValue eks-vpc-pub-VpcId
          SecurityGroupIds: [!Ref CodeBuildSecurityGroup]
          Subnets:
              Fn::Split:
                  - ','
                  - Fn::ImportValue:
                     Fn::Sub: ${VpcStack}-PrivateSubnets

  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Codebuild Internet Group
      GroupDescription: 'CodeBuild SecurityGroup'
      VpcId: !ImportValue eks-vpc-pub-VpcId
     

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com

  CodePipelineServicePolicy:
    # This policy orchestrates CloudFormation and CodeBuild.
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineServicePolicy
      Roles:
        - !Ref CodePipelineServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${DeploymentArtifactBucket}/*"
          - Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Resource: !GetAtt CodeBuildProject.Arn

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: SourceCode
          Actions:
            - Name: SourceForStaging
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCodeOutputArtifactStaging
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1  
            - Name: SourceForDev
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCodeOutputArtifactDev
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1 
        - Name: StagingEnvironmentDeployment
          Actions: 
            - Name: DeploytoStage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCodeOutputArtifactStaging
              OutputArtifacts:
                - Name: BuildOutputArtifact
              Configuration:
                EnvironmentVariables: !Sub '[{"name":"AWS_DEFAULT_REGION","value":"ap-south-1","type":"PLAINTEXT"},
                                       {"name":"AWS_ACCOUNT_ID","value":"${AWSAccountID}","type":"PLAINTEXT"},
                                       {"name":"IMAGE_REPO_NAME","value":"${ECRRepoName}","type":"PLAINTEXT"},
                                       {"name":"AWS_CLUSTER_NAME","value":"${EKSClusterName}","type":"PLAINTEXT"}]'
                                       
                ProjectName: !Ref ProjectName
              RunOrder: 1
        - Name: DevEnvironmentDeployment
          Actions:
            - Name: ApproveForDevDeployment
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              RunOrder: 2
            - Name: BuildAndDeploytoDev
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCodeOutputArtifactDev
              OutputArtifacts:
                - Name: BuildOutputArtifactDev
              Configuration:
                EnvironmentVariables: !Sub '[{"name":"AWS_DEFAULT_REGION","value":"ap-south-1","type":"PLAINTEXT"},
                                       {"name":"AWS_ACCOUNT_ID","value":"${AWSAccountID}","type":"PLAINTEXT"},
                                       {"name":"IMAGE_REPO_NAME","value":"${ECRRepoName}","type":"PLAINTEXT"},
                                       {"name":"AWS_CLUSTER_NAME","value":"${EKSClusterName}","type":"PLAINTEXT"}]'
                ProjectName: !Ref ProjectName
              RunOrder: 2
      ArtifactStore:
        Type: S3
        Location: !Ref DeploymentArtifactBucket
      Name: !Ref ProjectName
