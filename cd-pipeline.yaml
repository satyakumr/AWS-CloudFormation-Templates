AWSTemplateFormatVersion: 2010-09-09
Description: Continuous Integration for project

Parameters:
  ProjectName:
    Type: String
    Description: The name of the project being built.  This name will be used on a number of resources.
  ProjectParameterOverrides:
    Type: String
    Description: JSON string for the parameters of the project template.
    Default: "{}"
  GitHubOAuthToken:
    Type: String
    Description: GitHub oauth token.  This user must have admin access to the repo.
    NoEcho: true
  GitHubRepoOwner:
    Type: String
    Description: GitHub repo owner.
  GitHubRepo:
    Type: String
    Description: GitHub git repo.
  GitHubBranch:
    Type: String
    Description: Git branch to build off of.
  GitHubBranchDest:
    Type: String
    Description: Git branch to pull request into after a successful deploy.  Leave empty for no action.
    Default: ""
  EKSClusterName:
    Type: String
    Description: AWS EKS Repositry Name

Conditions:
  PullRequestAfterDeploy: !Not [!Equals [!Ref GitHubBranchDest, ""]]

Resources:

    # S3 bucket where build artifacts go
  DeploymentArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        # The guide recommends Enabled but I can't see why
        Status: Suspended

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com

  CodeBuildServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeBuildServicePolicy
      Roles:
        - !Ref CodeBuildServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*/*"
              - !Sub "arn:aws:s3:::${DeploymentArtifactBucket}/*"
          - Effect: Allow
            Action:
              - eks:DescribeCluster
            Resource: "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        # ComputeType options: BUILD_GENERAL1_SMALL, BUILD_GENERAL1_MEDIUM, BUILD_GENERAL1_LARGE
        ComputeType: BUILD_GENERAL1_SMALL
        # Run `aws codebuild list-curated-environment-images` for a complete list of images provided.
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: BUILD_ARTIFACT_BUCKET
            Value: !Ref DeploymentArtifactBucket
          - Name: AWS_DEFAULT_REGION
            Value: ap-south-1
          - Name: AWS_CLUSTER_NAME
            Value: !Ref EKSClusterName
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-eks.yml
      TimeoutInMinutes: 10

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com

  CodePipelineServicePolicy:
    # This policy orchestrates CloudFormation and CodeBuild.
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineServicePolicy
      Roles:
        - !Ref CodePipelineServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${DeploymentArtifactBucket}/*"
          - Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Resource: !GetAtt CodeBuildProject.Arn

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: ImageSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: Amazon ECR
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ImageTag: latest
                RepositoryName: !Ref ECRRepoName
              RunOrder: 1
          Actions:
            - Name: EKS_deployment_source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: EKS_deployment_artifacts
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceArtifact
                - Name: EKS_deployment_artifacts
              OutputArtifacts:
                - Name: BuildArtifact
                - Name: BuildEKS_deployment_artifacts
              Configuration:
                ProjectName: !Ref ProjectName
                PrimarySource: EKS_deployment_artifacts
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref DeploymentArtifactBucket
      Name: !Ref ProjectName
